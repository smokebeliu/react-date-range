import React from 'react';
import { StylesType } from '../../styles';
import { AriaLabelsType } from '../../accessibility';
import { Locale } from 'date-fns';
import { DateRange } from '../DayCell';
export type CalendarProps = {
    showMonthArrow?: boolean;
    showMonthAndYearPickers?: boolean;
    disabledDates?: Date[];
    disabledDay?: (date: Date) => boolean;
    minDate?: Date;
    maxDate?: Date;
    date?: Date;
    onChange?: (date: Date) => void;
    onPreviewChange?: (date?: Date) => void;
    onRangeFocusChange?: (range: number[]) => void;
    classNames?: Partial<StylesType>;
    locale?: Locale;
    shownDate?: Date;
    onShownDateChange?: (date: Date) => void;
    ranges?: DateRange[];
    preview?: {
        startDate?: Date;
        endDate?: Date;
        color?: string;
    };
    dateDisplayFormat?: string;
    monthDisplayFormat?: string;
    weekdayDisplayFormat?: string;
    weekStartsOn?: number;
    dayDisplayFormat?: string;
    focusedRange?: number[];
    dayContentRenderer?: (date: Date) => React.ReactElement;
    initialFocusedRange?: number[];
    months?: number;
    className?: string;
    showDateDisplay?: boolean;
    showPreview?: boolean;
    displayMode?: "dateRange" | "date";
    color?: string;
    updateRange?: (range: DateRange) => void;
    scroll?: {
        enabled?: boolean;
        monthHeight?: number;
        longMonthHeight?: number;
        monthWidth?: number;
        calendarWidth?: number;
        calendarHeight?: number;
    };
    direction?: 'vertical' | 'horizontal';
    startDatePlaceholder?: string;
    endDatePlaceholder?: string;
    rangeColors?: string[];
    editableDateInputs?: boolean;
    dragSelectionEnabled?: boolean;
    fixedHeight?: boolean;
    calendarFocus?: "forwards" | "backwards";
    preventSnapRefocus?: boolean;
    ariaLabels?: AriaLabelsType;
    preventScrollToFocusedMonth?: boolean;
    showWeekNumbers?: boolean;
    weeksNumbersLabel?: string;
};
export default function Calendar({ showMonthArrow, showMonthAndYearPickers, disabledDates, disabledDay, minDate, maxDate, date, onChange, onPreviewChange, onRangeFocusChange, classNames, locale, shownDate, onShownDateChange, ranges, preview, dateDisplayFormat, monthDisplayFormat, weekdayDisplayFormat, weekStartsOn, dayDisplayFormat, focusedRange, dayContentRenderer, months, className, showDateDisplay, showPreview, displayMode, color, updateRange, scroll, direction, startDatePlaceholder, endDatePlaceholder, rangeColors, editableDateInputs, dragSelectionEnabled, fixedHeight, calendarFocus, preventSnapRefocus, ariaLabels, preventScrollToFocusedMonth, showWeekNumbers, weeksNumbersLabel, }: CalendarProps): import("react/jsx-runtime").JSX.Element;
