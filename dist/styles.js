"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const Styles = {
  dateRangeWrapper: 'rdrDateRangeWrapper',
  calendarWrapper: 'rdrCalendarWrapper',
  dateDisplay: 'rdrDateDisplay',
  dateDisplayItem: 'rdrDateDisplayItem',
  dateDisplayItemActive: 'rdrDateDisplayItemActive',
  monthAndYearWrapper: 'rdrMonthAndYearWrapper',
  monthAndYearPickers: 'rdrMonthAndYearPickers',
  nextPrevButton: 'rdrNextPrevButton',
  month: 'rdrMonth',
  weekDays: 'rdrWeekDays',
  weekDay: 'rdrWeekDay',
  days: 'rdrDays',
  day: 'rdrDay',
  dayNumber: 'rdrDayNumber',
  dayPassive: 'rdrDayPassive',
  dayToday: 'rdrDayToday',
  dayStartOfWeek: 'rdrDayStartOfWeek',
  dayEndOfWeek: 'rdrDayEndOfWeek',
  daySelected: 'rdrDaySelected',
  dayDisabled: 'rdrDayDisabled',
  dayStartOfMonth: 'rdrDayStartOfMonth',
  dayEndOfMonth: 'rdrDayEndOfMonth',
  dayWeekend: 'rdrDayWeekend',
  dayStartPreview: 'rdrDayStartPreview',
  dayInPreview: 'rdrDayInPreview',
  dayEndPreview: 'rdrDayEndPreview',
  dayHovered: 'rdrDayHovered',
  dayActive: 'rdrDayActive',
  inRange: 'rdrInRange',
  endEdge: 'rdrEndEdge',
  startEdge: 'rdrStartEdge',
  prevButton: 'rdrPprevButton',
  nextButton: 'rdrNextButton',
  selected: 'rdrSelected',
  months: 'rdrMonths',
  monthPicker: 'rdrMonthPicker',
  yearPicker: 'rdrYearPicker',
  dateDisplayWrapper: 'rdrDateDisplayWrapper',
  definedRangesWrapper: 'rdrDefinedRangesWrapper',
  staticRanges: 'rdrStaticRanges',
  staticRange: 'rdrStaticRange',
  inputRanges: 'rdrInputRanges',
  inputRange: 'rdrInputRange',
  inputRangeInput: 'rdrInputRangeInput',
  dateRangePickerWrapper: 'rdrDateRangePickerWrapper',
  staticRangeLabel: 'rdrStaticRangeLabel',
  staticRangeSelected: 'rdrStaticRangeSelected',
  monthName: 'rdrMonthName',
  infiniteMonths: 'rdrInfiniteMonths',
  monthsVertical: 'rdrMonthsVertical',
  monthsHorizontal: 'rdrMonthsHorizontal',
  monthWrapper: 'rdrMonthWrapper',
  weekNumbersWrapper: 'rdrWeekNumbersWrapper',
  weekNumbersLabel: 'rdrWeekNumbersLabel'
};
var _default = exports.default = Styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZXMiLCJkYXRlUmFuZ2VXcmFwcGVyIiwiY2FsZW5kYXJXcmFwcGVyIiwiZGF0ZURpc3BsYXkiLCJkYXRlRGlzcGxheUl0ZW0iLCJkYXRlRGlzcGxheUl0ZW1BY3RpdmUiLCJtb250aEFuZFllYXJXcmFwcGVyIiwibW9udGhBbmRZZWFyUGlja2VycyIsIm5leHRQcmV2QnV0dG9uIiwibW9udGgiLCJ3ZWVrRGF5cyIsIndlZWtEYXkiLCJkYXlzIiwiZGF5IiwiZGF5TnVtYmVyIiwiZGF5UGFzc2l2ZSIsImRheVRvZGF5IiwiZGF5U3RhcnRPZldlZWsiLCJkYXlFbmRPZldlZWsiLCJkYXlTZWxlY3RlZCIsImRheURpc2FibGVkIiwiZGF5U3RhcnRPZk1vbnRoIiwiZGF5RW5kT2ZNb250aCIsImRheVdlZWtlbmQiLCJkYXlTdGFydFByZXZpZXciLCJkYXlJblByZXZpZXciLCJkYXlFbmRQcmV2aWV3IiwiZGF5SG92ZXJlZCIsImRheUFjdGl2ZSIsImluUmFuZ2UiLCJlbmRFZGdlIiwic3RhcnRFZGdlIiwicHJldkJ1dHRvbiIsIm5leHRCdXR0b24iLCJzZWxlY3RlZCIsIm1vbnRocyIsIm1vbnRoUGlja2VyIiwieWVhclBpY2tlciIsImRhdGVEaXNwbGF5V3JhcHBlciIsImRlZmluZWRSYW5nZXNXcmFwcGVyIiwic3RhdGljUmFuZ2VzIiwic3RhdGljUmFuZ2UiLCJpbnB1dFJhbmdlcyIsImlucHV0UmFuZ2UiLCJpbnB1dFJhbmdlSW5wdXQiLCJkYXRlUmFuZ2VQaWNrZXJXcmFwcGVyIiwic3RhdGljUmFuZ2VMYWJlbCIsInN0YXRpY1JhbmdlU2VsZWN0ZWQiLCJtb250aE5hbWUiLCJpbmZpbml0ZU1vbnRocyIsIm1vbnRoc1ZlcnRpY2FsIiwibW9udGhzSG9yaXpvbnRhbCIsIm1vbnRoV3JhcHBlciIsIndlZWtOdW1iZXJzV3JhcHBlciIsIndlZWtOdW1iZXJzTGFiZWwiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vc3JjL3N0eWxlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBTdHlsZXNUeXBlID0ge1xuICBtb250aEFuZFllYXJEaXZpZGVyOiBzdHJpbmc7XG4gIGRhdGVSYW5nZVdyYXBwZXI6IHN0cmluZztcbiAgY2FsZW5kYXJXcmFwcGVyOiBzdHJpbmc7XG4gIGRhdGVEaXNwbGF5OiBzdHJpbmc7XG4gIGRhdGVEaXNwbGF5SXRlbTogc3RyaW5nO1xuICBkYXRlRGlzcGxheUl0ZW1BY3RpdmU6IHN0cmluZztcbiAgbW9udGhBbmRZZWFyV3JhcHBlcjogc3RyaW5nO1xuICBtb250aEFuZFllYXJQaWNrZXJzOiBzdHJpbmc7XG4gIG5leHRQcmV2QnV0dG9uOiBzdHJpbmc7XG4gIG1vbnRoOiBzdHJpbmc7XG4gIHdlZWtEYXlzOiBzdHJpbmc7XG4gIHdlZWtEYXk6IHN0cmluZztcbiAgZGF5czogc3RyaW5nO1xuICBkYXk6IHN0cmluZztcbiAgZGF5TnVtYmVyOiBzdHJpbmc7XG4gIGRheVBhc3NpdmU6IHN0cmluZztcbiAgZGF5VG9kYXk6IHN0cmluZztcbiAgZGF5U3RhcnRPZldlZWs6IHN0cmluZztcbiAgZGF5RW5kT2ZXZWVrOiBzdHJpbmc7XG4gIGRheVNlbGVjdGVkOiBzdHJpbmc7XG4gIGRheURpc2FibGVkOiBzdHJpbmc7XG4gIGRheVN0YXJ0T2ZNb250aDogc3RyaW5nO1xuICBkYXlFbmRPZk1vbnRoOiBzdHJpbmc7XG4gIGRheVdlZWtlbmQ6IHN0cmluZztcbiAgZGF5U3RhcnRQcmV2aWV3OiBzdHJpbmc7XG4gIGRheUluUHJldmlldzogc3RyaW5nO1xuICBkYXlFbmRQcmV2aWV3OiBzdHJpbmc7XG4gIGRheUhvdmVyZWQ6IHN0cmluZztcbiAgZGF5QWN0aXZlOiBzdHJpbmc7XG4gIGluUmFuZ2U6IHN0cmluZztcbiAgZW5kRWRnZTogc3RyaW5nO1xuICBzdGFydEVkZ2U6IHN0cmluZztcbiAgcHJldkJ1dHRvbjogc3RyaW5nO1xuICBuZXh0QnV0dG9uOiBzdHJpbmc7XG4gIHNlbGVjdGVkOiBzdHJpbmc7XG4gIG1vbnRoczogc3RyaW5nO1xuICBtb250aFBpY2tlcjogc3RyaW5nO1xuICB5ZWFyUGlja2VyOiBzdHJpbmc7XG4gIGRhdGVEaXNwbGF5V3JhcHBlcjogc3RyaW5nO1xuICBkZWZpbmVkUmFuZ2VzV3JhcHBlcjogc3RyaW5nO1xuICBzdGF0aWNSYW5nZXM6IHN0cmluZztcbiAgc3RhdGljUmFuZ2U6IHN0cmluZztcbiAgaW5wdXRSYW5nZXM6IHN0cmluZztcbiAgaW5wdXRSYW5nZTogc3RyaW5nO1xuICBpbnB1dFJhbmdlSW5wdXQ6IHN0cmluZztcbiAgZGF0ZVJhbmdlUGlja2VyV3JhcHBlcjogc3RyaW5nO1xuICBzdGF0aWNSYW5nZUxhYmVsOiBzdHJpbmc7XG4gIHN0YXRpY1JhbmdlU2VsZWN0ZWQ6IHN0cmluZztcbiAgbW9udGhOYW1lOiBzdHJpbmc7XG4gIGluZmluaXRlTW9udGhzOiBzdHJpbmc7XG4gIG1vbnRoc1ZlcnRpY2FsOiBzdHJpbmc7XG4gIG1vbnRoc0hvcml6b250YWw6IHN0cmluZztcbiAgbW9udGhXcmFwcGVyOiBzdHJpbmc7XG4gIHdlZWtOdW1iZXJzV3JhcHBlcjogc3RyaW5nO1xuICB3ZWVrTnVtYmVyc0xhYmVsOiBzdHJpbmc7XG59O1xuXG5jb25zdCBTdHlsZXMgPSB7XG4gIGRhdGVSYW5nZVdyYXBwZXI6ICdyZHJEYXRlUmFuZ2VXcmFwcGVyJyxcbiAgY2FsZW5kYXJXcmFwcGVyOiAncmRyQ2FsZW5kYXJXcmFwcGVyJyxcbiAgZGF0ZURpc3BsYXk6ICdyZHJEYXRlRGlzcGxheScsXG4gIGRhdGVEaXNwbGF5SXRlbTogJ3JkckRhdGVEaXNwbGF5SXRlbScsXG4gIGRhdGVEaXNwbGF5SXRlbUFjdGl2ZTogJ3JkckRhdGVEaXNwbGF5SXRlbUFjdGl2ZScsXG4gIG1vbnRoQW5kWWVhcldyYXBwZXI6ICdyZHJNb250aEFuZFllYXJXcmFwcGVyJyxcbiAgbW9udGhBbmRZZWFyUGlja2VyczogJ3Jkck1vbnRoQW5kWWVhclBpY2tlcnMnLFxuICBuZXh0UHJldkJ1dHRvbjogJ3Jkck5leHRQcmV2QnV0dG9uJyxcbiAgbW9udGg6ICdyZHJNb250aCcsXG4gIHdlZWtEYXlzOiAncmRyV2Vla0RheXMnLFxuICB3ZWVrRGF5OiAncmRyV2Vla0RheScsXG4gIGRheXM6ICdyZHJEYXlzJyxcbiAgZGF5OiAncmRyRGF5JyxcbiAgZGF5TnVtYmVyOiAncmRyRGF5TnVtYmVyJyxcbiAgZGF5UGFzc2l2ZTogJ3JkckRheVBhc3NpdmUnLFxuICBkYXlUb2RheTogJ3JkckRheVRvZGF5JyxcbiAgZGF5U3RhcnRPZldlZWs6ICdyZHJEYXlTdGFydE9mV2VlaycsXG4gIGRheUVuZE9mV2VlazogJ3JkckRheUVuZE9mV2VlaycsXG4gIGRheVNlbGVjdGVkOiAncmRyRGF5U2VsZWN0ZWQnLFxuICBkYXlEaXNhYmxlZDogJ3JkckRheURpc2FibGVkJyxcbiAgZGF5U3RhcnRPZk1vbnRoOiAncmRyRGF5U3RhcnRPZk1vbnRoJyxcbiAgZGF5RW5kT2ZNb250aDogJ3JkckRheUVuZE9mTW9udGgnLFxuICBkYXlXZWVrZW5kOiAncmRyRGF5V2Vla2VuZCcsXG4gIGRheVN0YXJ0UHJldmlldzogJ3JkckRheVN0YXJ0UHJldmlldycsXG4gIGRheUluUHJldmlldzogJ3JkckRheUluUHJldmlldycsXG4gIGRheUVuZFByZXZpZXc6ICdyZHJEYXlFbmRQcmV2aWV3JyxcbiAgZGF5SG92ZXJlZDogJ3JkckRheUhvdmVyZWQnLFxuICBkYXlBY3RpdmU6ICdyZHJEYXlBY3RpdmUnLFxuICBpblJhbmdlOiAncmRySW5SYW5nZScsXG4gIGVuZEVkZ2U6ICdyZHJFbmRFZGdlJyxcbiAgc3RhcnRFZGdlOiAncmRyU3RhcnRFZGdlJyxcbiAgcHJldkJ1dHRvbjogJ3JkclBwcmV2QnV0dG9uJyxcbiAgbmV4dEJ1dHRvbjogJ3Jkck5leHRCdXR0b24nLFxuICBzZWxlY3RlZDogJ3JkclNlbGVjdGVkJyxcbiAgbW9udGhzOiAncmRyTW9udGhzJyxcbiAgbW9udGhQaWNrZXI6ICdyZHJNb250aFBpY2tlcicsXG4gIHllYXJQaWNrZXI6ICdyZHJZZWFyUGlja2VyJyxcbiAgZGF0ZURpc3BsYXlXcmFwcGVyOiAncmRyRGF0ZURpc3BsYXlXcmFwcGVyJyxcbiAgZGVmaW5lZFJhbmdlc1dyYXBwZXI6ICdyZHJEZWZpbmVkUmFuZ2VzV3JhcHBlcicsXG4gIHN0YXRpY1JhbmdlczogJ3JkclN0YXRpY1JhbmdlcycsXG4gIHN0YXRpY1JhbmdlOiAncmRyU3RhdGljUmFuZ2UnLFxuICBpbnB1dFJhbmdlczogJ3JkcklucHV0UmFuZ2VzJyxcbiAgaW5wdXRSYW5nZTogJ3JkcklucHV0UmFuZ2UnLFxuICBpbnB1dFJhbmdlSW5wdXQ6ICdyZHJJbnB1dFJhbmdlSW5wdXQnLFxuICBkYXRlUmFuZ2VQaWNrZXJXcmFwcGVyOiAncmRyRGF0ZVJhbmdlUGlja2VyV3JhcHBlcicsXG4gIHN0YXRpY1JhbmdlTGFiZWw6ICdyZHJTdGF0aWNSYW5nZUxhYmVsJyxcbiAgc3RhdGljUmFuZ2VTZWxlY3RlZDogJ3JkclN0YXRpY1JhbmdlU2VsZWN0ZWQnLFxuICBtb250aE5hbWU6ICdyZHJNb250aE5hbWUnLFxuICBpbmZpbml0ZU1vbnRoczogJ3JkckluZmluaXRlTW9udGhzJyxcbiAgbW9udGhzVmVydGljYWw6ICdyZHJNb250aHNWZXJ0aWNhbCcsXG4gIG1vbnRoc0hvcml6b250YWw6ICdyZHJNb250aHNIb3Jpem9udGFsJyxcbiAgbW9udGhXcmFwcGVyOiAncmRyTW9udGhXcmFwcGVyJyxcbiAgd2Vla051bWJlcnNXcmFwcGVyOiAncmRyV2Vla051bWJlcnNXcmFwcGVyJyxcbiAgd2Vla051bWJlcnNMYWJlbDogJ3JkcldlZWtOdW1iZXJzTGFiZWwnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgU3R5bGVzOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBMERBLE1BQU1BLE1BQU0sR0FBRztFQUNiQyxnQkFBZ0IsRUFBRSxxQkFBcUI7RUFDdkNDLGVBQWUsRUFBRSxvQkFBb0I7RUFDckNDLFdBQVcsRUFBRSxnQkFBZ0I7RUFDN0JDLGVBQWUsRUFBRSxvQkFBb0I7RUFDckNDLHFCQUFxQixFQUFFLDBCQUEwQjtFQUNqREMsbUJBQW1CLEVBQUUsd0JBQXdCO0VBQzdDQyxtQkFBbUIsRUFBRSx3QkFBd0I7RUFDN0NDLGNBQWMsRUFBRSxtQkFBbUI7RUFDbkNDLEtBQUssRUFBRSxVQUFVO0VBQ2pCQyxRQUFRLEVBQUUsYUFBYTtFQUN2QkMsT0FBTyxFQUFFLFlBQVk7RUFDckJDLElBQUksRUFBRSxTQUFTO0VBQ2ZDLEdBQUcsRUFBRSxRQUFRO0VBQ2JDLFNBQVMsRUFBRSxjQUFjO0VBQ3pCQyxVQUFVLEVBQUUsZUFBZTtFQUMzQkMsUUFBUSxFQUFFLGFBQWE7RUFDdkJDLGNBQWMsRUFBRSxtQkFBbUI7RUFDbkNDLFlBQVksRUFBRSxpQkFBaUI7RUFDL0JDLFdBQVcsRUFBRSxnQkFBZ0I7RUFDN0JDLFdBQVcsRUFBRSxnQkFBZ0I7RUFDN0JDLGVBQWUsRUFBRSxvQkFBb0I7RUFDckNDLGFBQWEsRUFBRSxrQkFBa0I7RUFDakNDLFVBQVUsRUFBRSxlQUFlO0VBQzNCQyxlQUFlLEVBQUUsb0JBQW9CO0VBQ3JDQyxZQUFZLEVBQUUsaUJBQWlCO0VBQy9CQyxhQUFhLEVBQUUsa0JBQWtCO0VBQ2pDQyxVQUFVLEVBQUUsZUFBZTtFQUMzQkMsU0FBUyxFQUFFLGNBQWM7RUFDekJDLE9BQU8sRUFBRSxZQUFZO0VBQ3JCQyxPQUFPLEVBQUUsWUFBWTtFQUNyQkMsU0FBUyxFQUFFLGNBQWM7RUFDekJDLFVBQVUsRUFBRSxnQkFBZ0I7RUFDNUJDLFVBQVUsRUFBRSxlQUFlO0VBQzNCQyxRQUFRLEVBQUUsYUFBYTtFQUN2QkMsTUFBTSxFQUFFLFdBQVc7RUFDbkJDLFdBQVcsRUFBRSxnQkFBZ0I7RUFDN0JDLFVBQVUsRUFBRSxlQUFlO0VBQzNCQyxrQkFBa0IsRUFBRSx1QkFBdUI7RUFDM0NDLG9CQUFvQixFQUFFLHlCQUF5QjtFQUMvQ0MsWUFBWSxFQUFFLGlCQUFpQjtFQUMvQkMsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsVUFBVSxFQUFFLGVBQWU7RUFDM0JDLGVBQWUsRUFBRSxvQkFBb0I7RUFDckNDLHNCQUFzQixFQUFFLDJCQUEyQjtFQUNuREMsZ0JBQWdCLEVBQUUscUJBQXFCO0VBQ3ZDQyxtQkFBbUIsRUFBRSx3QkFBd0I7RUFDN0NDLFNBQVMsRUFBRSxjQUFjO0VBQ3pCQyxjQUFjLEVBQUUsbUJBQW1CO0VBQ25DQyxjQUFjLEVBQUUsbUJBQW1CO0VBQ25DQyxnQkFBZ0IsRUFBRSxxQkFBcUI7RUFDdkNDLFlBQVksRUFBRSxpQkFBaUI7RUFDL0JDLGtCQUFrQixFQUFFLHVCQUF1QjtFQUMzQ0MsZ0JBQWdCLEVBQUU7QUFDcEIsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBRWF6RCxNQUFNIiwiaWdub3JlTGlzdCI6W119